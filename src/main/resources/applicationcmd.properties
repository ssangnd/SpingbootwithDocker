# docker build --tag springboot-docker .  
# docker run -dp 8085:8083 --name springboot-docker-container -v "$(pwd):/app" springboot-docker

# server.port=8083
# spring.datasource.url=jdbc:mysql://mysql-springboot-container:3306/StudentManagement
# spring.datasource.username=root
# spring.datasource.password=Abc@123456789
# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# spring.datasource.driver-class-name =com.mysql.cj.jdbc.Driver
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=update

# curl --request GET --url http://localhost:8085/students/hello --header 'content-type: application/json'
# docker run -dp 8085:8083 --name springboot-docker-container -v $(pwd):/app springboot-docker
# Update code & rerun
# docker restart springboot-docker 

# docker network create springboot-app-network

# Now create another MYSQL container and put this within the same network with spring boot container
# docker run --rm -d \
# -v mysql-springboot-data:/var/lib/mysql \
# -v mysql-springboot-config-deamon:/etc/mysql/config.d \
# --name mysql-springboot-container \
# -p 3301:3306 \
# -e MYSQL_USER=sangnd \
# - MYSQL_PASSWORD=123456 \
# -e MYSQL_ROOT_PASSWORD=123456 \
# -e MYSQL_DATABASE=StudentManagement \
# --network springboot-app-network \
# mysql:8.0.29

# docker run -d --rm --name mysql-springboot-container \
# -e MYSQL_ROOT_PASSWORD=123456 \
# -e MYSQL_USER=sangnd \
# -e MYSQL_PASSWORD=123456 \
# -e MYSQL_DATABASE=StudentManagement \
# -p 3301:3306 \
# --volume mysql-springboot-data:/var/lib/mysql \
# --mysql-springboot-config-deamon:/etc/mysql/config.d \
# --network springboot-app-network \
# mysql:8.0.29


# docker run -d --rm --name mysql-springboot-container \
# -e MYSQL_ROOT_PASSWORD=123456 \
# -e MYSQL_USER=sangnd \
# -e MYSQL_PASSWORD=123456 \
# -e MYSQL_DATABASE=StudentManagement \
# -p 3301:3306 \
# --volume mysql-springboot-data:/var/lib/mysql \
# --volume mysql-springboot-config-deamon:/etc/mysql/conf.d \
# --network springboot-app-network \
# mysql:8.0.29


# docker run -dp 8085:8083 --name springboot-docker-container -v springboot-volume:/app --network springboot-app-network  springboot-docker